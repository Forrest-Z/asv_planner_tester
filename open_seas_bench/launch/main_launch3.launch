<launch>

  <!-- Global parameters -->
  <arg name="use_sim_time" default="false" />
  <arg name="trigger_shutdown" default="1" />
  <arg name="coast_margin" default="10" />
  <arg name="mapfile" default="None" />
  <!-- Environment parameters -->
  <arg name="Fx_current" default="0.0" />
  <arg name="Fy_current" default="0.0" />
  <arg name="there_are_waves" default="false" />
  <!-- ASV parameters -->
  <arg name="initial_state" default="[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]" />
  <arg name="waypoints" default="[[0.0, 0.0], [0.0, 0.0]]" />
  <arg name="u_d" default="5.0" />
  <arg name="vessel_param_file" default="$(find asv_simulator)/config/parameters/viknes.yaml" if="$(arg there_are_waves)"/>
  <arg name="vessel_param_file" default="$(find asv_simulator)/config/parameters/viknes2.yaml" unless="$(arg there_are_waves)"/>
  <arg name="vessel_model_file" default="$(find asv_simulator)/config/models/viknes.urdf" />
  <arg name="use_vo" default="True" />
  <arg name="RADIUS" default="10." />
  <arg name="MAX_VEL" default="20." />
  <arg name="D_CPA_MIN" default="50." />
  <arg name="rviz" default="True" />
  <!-- Output -->
  <arg name="opus" default="0" />
  <arg name="output_file" default="$(find asv_system)/output/test.txt" />
  <arg name="t_sim" default="75" />
  <arg name="tMaxSim" default="200" />
  <arg name="pos_end_waypoint" default="[0.,0.]" />


  <rosparam param="/use_sim_time" subst_value="True">$(arg use_sim_time)</rosparam>

  <group ns="$(arg opus)">
    <param name="opus" value="$(arg opus)" />
    <group if="$(arg use_sim_time)">
      <node pkg="asv_referee"
            name="chronos_node"
            type="asv_clock_node.py"
            respawn="false"
            output="screen" />
    </group>

    <node pkg="asv_referee"
          name="referee_node"
          type="asv_referee_node.py"
          respawn="false"
          output="screen">
      <rosparam param="shutdown" subst_value="True">$(arg trigger_shutdown)</rosparam>
      <rosparam param="output_file" subst_value="True">$(arg output_file)</rosparam>
      <rosparam param="opus" subst_value="True">$(arg opus)</rosparam>
      <rosparam param="tMaxSim" subst_value="True">$(arg tMaxSim)</rosparam>
    </node>

    <node pkg="asv_simulator"
          name="asv"
          type="asv_simulator_node"
          respawn="false"
          output="screen">
      <rosparam param="initial_state" subst_value="True">$(arg initial_state)</rosparam>
      <rosparam command="load" file="$(arg vessel_param_file)" />
      <rosparam param="Fx_current" subst_value="True">$(arg Fx_current)</rosparam>
      <rosparam param="Fy_current" subst_value="True">$(arg Fy_current)</rosparam>
    </node>

    <node pkg="asv_path_trackers"
          name="PPNode"
          type="asv_ctrl_pp_node.py"
          respawn="false"
          output="screen">
      <rosparam param="u_d" subst_value="True">$(arg u_d)</rosparam>
      <rosparam param="waypoints" subst_value="True">$(arg waypoints)</rosparam>

      <remap from="cmd_vel" to="LOS/cmd_vel" if="$(arg use_vo)"/>
    </node>


    <group if="$(arg use_vo)">
      <node pkg="asv_ctrl_vo"
            name="vo_node"
            type="asv_ctrl_vo_node"
            respawn="false"
            output="screen" />
      <rosparam param="MAX_VEL" subst_value="True">$(arg MAX_VEL)</rosparam>
      <rosparam param="RADIUS" subst_value="True">$(arg RADIUS)</rosparam>
      <rosparam param="D_CPA_MIN" subst_value="True">$(arg D_CPA_MIN)</rosparam>

    </group>

    <group if="$(arg rviz)">
      <node pkg="rviz"
            type="rviz"
            name="rviz"
            args="-d $(find asv_simulator)/config/rviz/map_and_proc_map.rviz" />
    </group>

    <!-- <node pkg="rosbag"
          type="record"
          name="rosbag_record"
          args="-O /home/soubi/Documents/SEAOWL//home/soubi/Documents/SEAOWL/nonor_ws/src/ros_asv_system/asv_system/bagfiles/mozambique.bag /asv/state /obstacles/ship1/state /obstacles/ship2/state /obstacle_states"
          /> -->
  </group>
</launch>
