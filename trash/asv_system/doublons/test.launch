<launch>

  <arg name="use_sim_time" value="false" />
  <arg name="trigger_shutdown" value="0" />
  <arg name="coast_margin" value="0" />


  <group if="$(arg use_sim_time)">
    <node pkg="asv_referee"
          name="chronos_node"
          type="asv_clock_node.py"
          respawn="false"
          output="screen" >
      <param name="/use_sim_time" value="true"/>
    </node>
  </group>

  <node pkg="asv_referee"
        name="referee_node"
        type="asv_referee_node.py"
        respawn="false"
        output="screen"
        required="true">
    <rosparam param="shutdown" subst_value="True">$(arg trigger_shutdown)</rosparam>
  </node>

  <include file="$(find asv_simulator)/launch/test.launch">
    <arg name="u_d" value="5.0" />
    <arg name="waypoint_file" value="$(find asv_simulator)/config/waypoints/test.yaml" />
    <arg name="initial_state" value="[0.0, 0.0, 1.56, 1.,0.,0.]" />
  </include>


  <!-- <include file="$(find asv_obstacle_tracker)/launch/default.launch"/> -->


  <include file="$(find asv_system)/launch/mapserver.launch">
    <arg name="mapfile" value="$(find asv_system)/config/maps/island.yaml" />
  </include>

  <!-- <node pkg="asv_simulator"     -->
  <!--      name="map_mesh_node"     -->
  <!--      type="meshpublisher.py"  -->
  <!--      respawn="false"          -->
  <!--      output="screen" />       -->

  <node pkg="asv_map_processing"
        name="map_processing_node"
        type="asv_map_processing_node"
        respawn="false"
        output="screen" >
    <rosparam param="coast_margin" subst_value="True">$(arg coast_margin)</rosparam>
  </node>


  <node pkg="rviz"
        type="rviz"
        name="rviz"
        args="-d $(find asv_simulator)/config/rviz/two_vessels.rviz" />

</launch>
